<?xml version="1.0" encoding="utf-8" ?>
<Defs>

<ScenarioDef>
	<defName>EngiesTribeScenario</defName>
    <label>Engies only, you motherboard f*cker</label>
    <description>var aa,ba,ca,da,ea;</description>
	<scenario>
	<summary>IA rul3z</summary>
	<playerFaction>
		<def>PlayerFaction</def>
		<factionDef>EngiePlayerColony</factionDef>
	</playerFaction>
	<parts>

	<!-- Config pages -->
	<li Class="ScenPart_ConfigPage_ConfigureStartingPawns">
		<def>ConfigPage_ConfigureStartingPawns</def>
		<pawnCount>4</pawnCount>
		<pawnChoiceCount>9</pawnChoiceCount>
	</li>

	<!-- Player starting stuff spawn method-->
	<li Class="ScenPart_PlayerPawnsArriveMethod">
		<def>PlayerPawnsArriveMethod</def>
		<method>DropPods</method>
		<visible>false</visible>
	</li>

	<!-- Player pawns modifiers -->
	<li Class="ScenPart_ForcedHediff">
		<def>ForcedHediff</def>
		<visible>false</visible>
		<context>PlayerStarter</context>
		<chance>0.3</chance>
		<hediff>Anesthetic</hediff>
		<severityRange>
			<min>0.2</min>
			<max>0.4</max>
		</severityRange>
	</li>
	<li Class="ScenPart_ForcedHediff">
		<def>ForcedHediff</def>
		<visible>false</visible>
		<context>PlayerStarter</context>
		<chance>0.05</chance>
		<hediff>TraumaSavant</hediff>
	</li>
	<li Class="ScenPart_ForcedHediff">
		<def>ForcedHediff</def>
		<visible>false</visible>
		<context>PlayerStarter</context>
		<chance>0.3</chance>
		<hediff>CryptosleepSickness</hediff>
		<severityRange>
			<min>0.2</min>
			<max>0.4</max>
		</severityRange>
	</li>
	
	<li Class="ScenPart_SetNeedLevel">
		<def>SetNeedLevel</def>
		<visible>false</visible>
		<context>PlayerStarter</context>
		<chance>1.0</chance>
		<need>Food</need>
		<levelRange>
		<min>0</min>
		<max>0.1</max>
		</levelRange>
	</li>

	<!-- Starting research -->
	<li Class="ScenPart_StartingResearch">
		<def>StartingResearch</def>
		<project>LTF_Research_EngieT1Roms</project>
	</li>
	
	<!-- Player starting things -->
	<li Class="ScenPart_StartingThing_Defined">
	<def>StartingThing_Defined</def>
	<thingDef>Silver</thingDef>
	<count>200</count>
	</li>
	<li Class="ScenPart_StartingThing_Defined">
	<def>StartingThing_Defined</def>
	<thingDef>Pemmican</thingDef>
	<count>300</count>
	</li>
	<li Class="ScenPart_StartingThing_Defined">
	<def>StartingThing_Defined</def>
	<thingDef>MedicineHerbal</thingDef>
	<count>20</count>
	</li>

	<li Class="ScenPart_StartingThing_Defined">
		<def>StartingThing_Defined</def>
		<thingDef>MeleeWeapon_Spear</thingDef>
		<stuff>WoodLog</stuff>
	</li>
	<!-- weapon -->
	<li Class="ScenPart_StartingThing_Defined">
	<def>StartingThing_Defined</def>
	<thingDef>MeleeWeapon_Club</thingDef>
	<stuff>WoodLog</stuff>
	</li>
	<li Class="ScenPart_StartingThing_Defined">
		<def>StartingThing_Defined</def>
		<thingDef>MeleeWeapon_Knife</thingDef>
		<stuff>Jade</stuff>
	</li>
	<li Class="ScenPart_StartingThing_Defined">
	<def>StartingThing_Defined</def>
		<thingDef>Bow_Short</thingDef>
		<count>1</count>
	</li>
	<li Class="ScenPart_StartingThing_Defined">
		<def>StartingThing_Defined</def>
		<thingDef>Pila</thingDef>
	</li>
	
	
	<li Class="ScenPart_StartingAnimal">
		<def>StartingAnimal</def>
		<count>2</count>
		<animalKind>BoardingDrone</animalKind>
		<bondToRandomPlayerPawnChance>1.0</bondToRandomPlayerPawnChance>
	</li>

	<!-- Scatter some things near player start -->
	<li Class="ScenPart_ScatterThingsNearPlayerStart">
		<def>ScatterThingsNearPlayerStart</def>
		<thingDef>WoodLog</thingDef>
		<count>500</count>
	</li>
	<li Class="ScenPart_ScatterThingsNearPlayerStart">
		<def>ScatterThingsNearPlayerStart</def>
		<thingDef>Steel</thingDef>
		<count>329</count>
	</li>
	<li Class="ScenPart_ScatterThingsNearPlayerStart">
		<def>ScatterThingsNearPlayerStart</def>
		<thingDef>ComponentIndustrial</thingDef>
		<count>7</count>
	</li>
	
	<!-- Game start dialog -->
	<li Class="ScenPart_GameStartDialog">
	<def>GameStartDialog</def>
	<text>; engie.asm
; assemble using nasm:   
; nasm -o engie.com -f bin engie.asm
	mov	ax,'00'		; initialize to all ASCII zeroes
	mov	di,counter		; including the counter
	mov	cx,digits+cntDigits/2	; two bytes at a time
	cld			; initialize from low to high memory
	rep	stosw		; write the data
	inc	ax		; make sure ASCII zero is in al
	mov	[num1 + digits - 1],al ; last digit is one
	mov	[num2 + digits - 1],al ; 
	mov	[counter + cntDigits - 1],al

	jmp	.bottom		; done with initialization, so begin</text>
	<closeSound>GameStartSting</closeSound>
	</li>

	</parts>
	</scenario>
	
</ScenarioDef>
</Defs>
